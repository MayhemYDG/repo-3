version: '3.7'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:2.13-2.7.1
    ports:
      - "9092:9092"
    links:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_CREATE_TOPICS: "test:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_MESSAGE_MAX_BYTES: 2000000
    depends_on:
      - zookeeper

  rabbit:
    build:
      context: .
      dockerfile: Dockerfile.test.yml
    container_name: 'rabbitmq'
    ports:
      - "15674:15674"
      - "15672:15672"

  no_keys_service_db:
    image: postgres:14-alpine
    container_name: no_keys_service_db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${KEYS_API_DB_NAME}
      - POSTGRES_USER=${KEYS_API_DB_USER}
      - POSTGRES_PASSWORD=${KEYS_API_DB_PASSWORD}
    ports:
      - ${KEYS_API_DB_PORT}:5432
    volumes:
      - ./.volumes/pgdata-${KEYS_API_CHAIN_ID}/:/var/lib/postgresql/data

  no_keys_service_prometheus:
    image: prom/prometheus:v2.17.2
    container_name: no_keys_service_prometheus
    ports:
      - 9090:9090
    volumes:
      - ./config/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  no_keys_service_grafana:
    image: grafana/grafana-oss:9.1.5
    container_name: no_keys_service_grafana
    restart: unless-stopped
    ports:
      - 8001:3000
    volumes:
      - ./.volumes/grafana/var:/var/lib/grafana

  no_keys_service_api:
    image: lidofinance/lido-node-operators-keys-api:staging
    container_name: no_keys_service_api
    ports:
      - '3001:3001'
    environment:
      - PORT=${KEYS_API_PORT}
      - CORS_WHITELIST_REGEXP=${KEYS_API_CORS_WHITELIST_REGEXP}
      - GLOBAL_THROTTLE_TTL=${KEYS_API_GLOBAL_THROTTLE_TTL}
      - GLOBAL_THROTTLE_LIMIT=${KEYS_API_GLOBAL_THROTTLE_LIMIT}
      - GLOBAL_CACHE_TTL=${KEYS_API_GLOBAL_CACHE_TTL}
      - LOG_LEVEL=${KEYS_API_LOG_LEVEL}
      - LOG_FORMAT=${KEYS_API_LOG_FORMAT}
      - CHAIN_ID=${KEYS_API_CHAIN_ID}
      - PROVIDERS_URLS=${KEYS_API_PROVIDERS_URLS}
      - DB_NAME=${KEYS_API_DB_NAME}
      - DB_PORT=5432
      - DB_HOST=no_keys_service_db
      - DB_USER=${KEYS_API_DB_USER}
      - DB_PASSWORD=${KEYS_API_DB_PASSWORD}
    depends_on:
      - no_keys_service_db

networks:
  default:
    external:
      name: webproxy
