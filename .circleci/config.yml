version: 2.1

executors:
  js-executor:
    docker:
      - image: cimg/node:16.13.2
    working_directory: ~/app

commands:
  restore_js_cache:
    description: 'restore js cache'
    parameters:
      cache_version:
        type: string
    steps:
      - restore_cache:
          keys:
            - <<parameters.cache_version>>-js-cache-{{ .Branch }}-{{ checksum "~/app/package.json" }}
            - <<parameters.cache_version>>-js-cache-{{ .Branch }}-
            - <<parameters.cache_version>>-js-cache-
  persist_js_cache:
    description: 'persist js cache'
    parameters:
      cache_version:
        type: string
    steps:
      - save_cache:
          key: <<parameters.cache_version>>-js-cache-{{ .Branch }}-{{ checksum "~/app/package.json" }}
          paths:
            - ~/app/node_modules
            - ~/app/packages/**/node_modules

  lerna_bootstrap:
    description: 'Setup Dependencies'
    parameters:
      cache_version:
        type: string
        default: 'build-v5'
    steps:
      - restore_js_cache:
          cache_version: <<parameters.cache_version>>
      - run:
          name: lerna bootstrap
          command: npm run bootstrap
      - persist_js_cache:
          cache_version: <<parameters.cache_version>>

  js_build:
    description: 'Build all lerna packages'
    steps:
      - run:
          name: Npm Build
          command: npm run build
      - persist_to_workspace:
          root: ~/app
          paths:
            - .

jobs:
  lint-and-test:
    executor: js-executor
    steps:
      - checkout
      - lerna_bootstrap
      - run:
          name: Lint
          command: npm run test
      # - run:
      #     name: Unit Test
      #     command: npm run test
  build-js-library:
    executor: js-executor
    steps:
      - checkout
      - lerna_bootstrap
      - js_build
  npm-publish-library:
    executor: js-executor
    steps:
      - attach_workspace:
          at: ~/app
      - run:
          name: Authenticate with registry
          command: npm config set //registry.npmjs.org/:_authToken=$npm_TOKEN
      - run:
          name: Publish all lerna packages
          command: npm run npm-publish:latest
  github-release:
    executor: js-executor
    steps:
      - attach_workspace:
          at: ~/app
      - run:
          name: Install Github CLI
          command: |
            curl -fL https://github.com/cli/cli/releases/download/v2.5.0/gh_2.5.0_linux_386.tar.gz -o gh.tar.gz
            tar -xf gh.tar.gz
            chmod +x gh_2.5.0_linux_386/bin/gh
            mkdir -p ~/.local/bin
            mv gh_2.5.0_linux_386/bin/gh ~/.local/bin
            gh version
      - run:
          name: Create Release and Upload assets
          command: |
            export TAG="v$(node -p -e "require('./package.json').version")"
            echo Creating Release $TAG
            gh release create $TAG --generate-notes
            npm run zip
            gh release upload $TAG dist.zip
            gh release upload $TAG README.md
            gh release upload $TAG package.json

workflows:
  version: 2.1
  continuous-deployment:
    jobs:
      - build-js-library
      - hold-github-release:
          type: approval
          branches:
            only:
              - main
              - develop
      - hold-npm-publish:
          type: approval
          branches:
            only:
              - main
              - develop
      - npm-publish-library:
          requires:
            - build-js-library
            - hold-npm-publish
      - github-release:
          requires:
            - build-js-library
            - hold-github-release
